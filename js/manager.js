// Generated by CoffeeScript 1.4.0
var checkList, checkUserSubscription, onAlarm, onInit, scheduleRequest, startRequest;

onInit = function() {
  console.log('onInit');
  if (!(localStorage.userDm5List != null)) {
    localStorage.userDm5List = '[]';
  }
  if (!(localStorage.user8comicList != null)) {
    localStorage.user8comicList = '[]';
  }
  return startRequest({
    scheduleRequest: true
  });
};

startRequest = function(params) {
  console.log('startRequest');
  if ((params != null) && params.scheduleRequest) {
    scheduleRequest();
  }
  return $.get('http://tel.dm5.com/manhua-new/', function(res) {
    var dm5Url, episodeNumber, episodeUrl, menuUrl, target, title, _i, _len, _ref, _results;
    dm5Url = 'http://tel.dm5.com';
    _ref = $(res).find('.innr3 .red_lj');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      menuUrl = dm5Url + $(target).find('a:first-child').attr('href');
      title = $(target).find('a:first-child').attr('title');
      episodeUrl = dm5Url + $(target).find('a:last-child').attr('href');
      episodeNumber = $(target).find('a:last-child').text();
      _results.push(checkUserSubscription({
        'site': 'dm5',
        'menuUrl': menuUrl,
        'title': title,
        'episodeUrl': episodeUrl,
        'episodeNumber': episodeNumber
      }));
    }
    return _results;
  });
};

scheduleRequest = function() {
  var delay;
  console.log('scheduleRequest');
  delay = 1;
  console.log("Scheduling for: " + delay + " min");
  return chrome.alarms.create('refresh', {
    periodInMinutes: delay
  });
};

checkUserSubscription = function(params) {
  console.log('checkUserSubscription');
  switch (params.site) {
    case 'dm5':
      return localStorage.userDm5List = checkList(localStorage.userDm5List, params);
    case '8comic':
      return localStorage.user8comicList = checkList(localStorage.user8comicList, params);
    default:
      return console.log('check nothing');
  }
};

checkList = function(ls_userList, params) {
  var ele, i, isNew, isSubscriber, unreadList, userList, _i, _len;
  if (!(localStorage.unreadList != null)) {
    localStorage.unreadList = JSON.stringify([]);
  }
  if (!(ls_userList != null)) {
    ls_userList = JSON.stringify([]);
  }
  unreadList = JSON.parse(localStorage.unreadList);
  userList = JSON.parse(ls_userList);
  for (i = _i = 0, _len = userList.length; _i < _len; i = ++_i) {
    ele = userList[i];
    isSubscriber = ele.menuUrl === params.menuUrl;
    isNew = ele.episodeUrl !== params.episodeUrl;
    if (isSubscriber && isNew) {
      console.log('just updated');
      unreadList.push(params);
      localStorage.unreadList = JSON.stringify(unreadList);
      userList[i] = params;
    } else if (isSubscriber) {
      console.log('already updated');
    } else {
      console.log('not matched');
    }
  }
  return JSON.stringify(userList);
};

onAlarm = function(alarm) {
  console.log('Got alarm');
  if ((alarm != null) && alarm.name === 'refresh') {
    return startRequest({
      scheduleRequest: true
    });
  }
};

chrome.runtime.onInstalled.addListener(onInit);

chrome.alarms.onAlarm.addListener(onAlarm);
