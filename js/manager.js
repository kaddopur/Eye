// Generated by CoffeeScript 1.4.0
var checkList, cview, find8comicOtherData, findSfacgOtherData, onAlarm, onInit, onLikeButton, scheduleRequest, startRequest, sync;

onLikeButton = function(request, sender, sendResponse) {
  var badgeText, e, ele, i, j, newCount, userList, _i, _j, _len, _len1;
  userList = JSON.parse(localStorage.userList);
  switch (request.action) {
    case 'setLikeButton':
      for (_i = 0, _len = userList.length; _i < _len; _i++) {
        ele = userList[_i];
        if (ele.menuUrl === request.params.menuUrl) {
          ele.episodeUrl = request.params.episodeUrl;
          ele.episodeNumber = request.params.episodeNumber;
          ele.isNew = false;
          newCount = ((function() {
            var _j, _len1, _results;
            _results = [];
            for (_j = 0, _len1 = userList.length; _j < _len1; _j++) {
              ele = userList[_j];
              if (ele.isNew) {
                _results.push(ele);
              }
            }
            return _results;
          })()).length;
          badgeText = newCount !== 0 ? '' + newCount : '';
          chrome.browserAction.setBadgeText({
            text: badgeText
          });
          localStorage.userList = JSON.stringify(userList);
          sync();
          sendResponse({
            isFunction: true
          });
          return;
        }
      }
      return sendResponse({
        isFunction: false
      });
    case 'clickLikeButton':
      for (i = _j = 0, _len1 = userList.length; _j < _len1; i = ++_j) {
        ele = userList[i];
        if (ele.menuUrl === request.params.menuUrl) {
          userList = (function() {
            var _k, _len2, _results;
            _results = [];
            for (j = _k = 0, _len2 = userList.length; _k < _len2; j = ++_k) {
              e = userList[j];
              if (i !== j) {
                _results.push(e);
              }
            }
            return _results;
          })();
          localStorage.userList = JSON.stringify(userList);
          sync();
          sendResponse({
            isFunction: false
          });
          return;
        }
      }
      userList.push(request.params);
      localStorage.userList = JSON.stringify(userList);
      sync();
      return sendResponse({
        isFunction: true
      });
  }
};

chrome.extension.onMessage.addListener(onLikeButton);

onInit = function() {
  localStorage.timestamp = '0';
  localStorage.userList = localStorage.userList || '[]';
  sync();
  chrome.tabs.create({
    url: chrome.extension.getURL('options.html')
  });
  return startRequest({
    scheduleRequest: true
  });
};

startRequest = function(params) {
  if ((params != null) && params.scheduleRequest) {
    scheduleRequest();
  }
  $.get('http://tel.dm5.com/manhua-new/', function(res) {
    var dm5Url, edgeNumber, edgeUrl, menuUrl, newBundle, target, title, _i, _len, _ref, _results;
    dm5Url = 'http://tel.dm5.com';
    _ref = $(res).find('.innr3 .red_lj');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      menuUrl = dm5Url + $(target).find('a:first-child').attr('href');
      title = $(target).find('a:first-child').attr('title').trim();
      edgeUrl = dm5Url + $(target).find('a:last-child').attr('href');
      edgeNumber = $(target).find('a:last-child').text().trim();
      newBundle = {
        edgeNumber: edgeNumber,
        edgeUrl: edgeUrl,
        menuUrl: menuUrl,
        site: 'dm5',
        title: title
      };
      _results.push(checkList(newBundle));
    }
    return _results;
  });
  $.get('http://www.8comic.com/comic/u-1.html', function(res) {
    var baComicUrl, menuUrl, target, _i, _len, _ref, _results;
    baComicUrl = 'http://www.8comic.com';
    _ref = $(res).find('td[height=30][nowrap] a');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      menuUrl = baComicUrl + $(target).attr('href');
      _results.push(find8comicOtherData(menuUrl));
    }
    return _results;
  });
  return $.get('http://comic.sfacg.com/WeeklyUpdate/', function(response) {
    var menuUrl, target, _i, _len, _ref, _results;
    _ref = $(response).find('#Day0 .gray_frame a, #Day1 .gray_frame a');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      menuUrl = $(target).attr('href');
      _results.push(findSfacgOtherData(menuUrl + '/'));
    }
    return _results;
  });
};

findSfacgOtherData = function(menuUrl) {
  return $.get(menuUrl, function(response) {
    var edge, edgeNumber, edgeUrl, episodeNumber, episodeUrl, newBundle, title;
    episodeUrl = location.href;
    episodeNumber = $(response).find("a[href='" + episodeUrl + "']").text();
    edge = $(response).find('.serialise_list:last li:first-child');
    edgeNumber = edge.text();
    edgeUrl = edge.find('a').attr('href');
    title = $(response).find('b.F14PX').text();
    newBundle = {
      edgeNumber: edgeNumber,
      edgeUrl: edgeUrl,
      menuUrl: menuUrl,
      site: 'sfacg',
      title: title
    };
    return checkList(newBundle);
  });
};

find8comicOtherData = function(menuUrl) {
  return $.get(menuUrl, function(res) {
    var callback, chapter, edgeNumber, edgeUrl, newBundle, params, re_callback, title;
    title = $(res).find('#Comic font')[0].firstChild.data.trim();
    chapter = $(res).find('.Vol, .Ch');
    edgeNumber = chapter[chapter.length - 1].text.trim();
    callback = $(chapter[chapter.length - 1]).attr('onclick');
    re_callback = /'(.*)',(.*)\)/;
    params = callback.match(re_callback);
    edgeUrl = cview(params[1], params[2]);
    newBundle = {
      edgeNumber: edgeNumber,
      edgeUrl: edgeUrl,
      menuUrl: menuUrl,
      site: '8comic',
      title: title
    };
    return checkList(newBundle);
  });
};

scheduleRequest = function() {
  var delay;
  delay = 30;
  return chrome.alarms.create('refresh', {
    periodInMinutes: delay
  });
};

checkList = function(params) {
  var badgeText, ele, i, isNew, isSubscriber, newCount, userList, _i, _len;
  userList = JSON.parse(localStorage.userList || []);
  for (i = _i = 0, _len = userList.length; _i < _len; i = ++_i) {
    ele = userList[i];
    isSubscriber = ele.menuUrl === params.menuUrl;
    isNew = ele.edgeUrl !== params.edgeUrl;
    if (isSubscriber && isNew) {
      ele.isNew = isNew;
      ele.edgeUrl = params.edgeUrl;
      ele.edgeNumber = params.edgeNumber;
      localStorage.userList = JSON.stringify(userList);
      sync();
      break;
    } else if (isSubscriber) {

    } else {

    }
  }
  newCount = ((function() {
    var _j, _len1, _results;
    _results = [];
    for (_j = 0, _len1 = userList.length; _j < _len1; _j++) {
      ele = userList[_j];
      if (ele.isNew) {
        _results.push(ele);
      }
    }
    return _results;
  })()).length;
  badgeText = newCount !== 0 ? '' + newCount : '';
  return chrome.browserAction.setBadgeText({
    text: badgeText
  });
};

onAlarm = function(alarm) {
  if ((alarm != null) && alarm.name === 'refresh') {
    return startRequest({
      scheduleRequest: true
    });
  }
};

cview = function(url, catid) {
  var baseurl;
  baseurl = '';
  catid = parseInt(catid);
  switch (catid) {
    case 4:
    case 6:
    case 12:
    case 22:
      baseurl = 'http://www.8comic.com/show/cool-';
      break;
    case 1:
    case 17:
    case 19:
    case 21:
      baseurl = 'http://www.8comic.com/show/cool-';
      break;
    case 2:
    case 5:
    case 7:
    case 9:
      baseurl = 'http://www.8comic.com/show/cool-';
      break;
    case 10:
    case 11:
    case 13:
    case 14:
      baseurl = 'http://www.8comic.com/show/best-manga-';
      break;
    case 3:
    case 8:
    case 15:
    case 16:
    case 18:
    case 20:
      baseurl = 'http://www.8comic.com/show/best-manga-';
  }
  url = url.replace('.html', '').replace('-', '.html?ch=');
  return baseurl + url;
};

sync = function() {
  var bundle, t, timestamp;
  if (localStorage.isSync === 'true') {
    t = new Date();
    timestamp = localStorage.timestamp = '' + Math.round(t.getTime() / 1000);
    bundle = {
      account: localStorage.account,
      password: localStorage.password,
      userlist: localStorage.userList,
      timestamp: localStorage.timestamp
    };
    return $.post('http://xzysite.appspot.com/bookmark', bundle, function(response) {
      console.log(response);
      switch (response.status) {
        case 'updated':
          console.log('updated');
          break;
        case 'overwrite':
          console.log('overwrite');
          localStorage.userList = response.userlist;
          localStorage.timestamp = response.timestamp;
          break;
        case 'error':
          console.log('error');
      }
      return console.log('synced');
    });
  }
};

chrome.runtime.onInstalled.addListener(onInit);

chrome.alarms.onAlarm.addListener(onAlarm);
