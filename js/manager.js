// Generated by CoffeeScript 1.4.0
var checkList, checkUserSubscription, cview, find8comicOtherData, onAlarm, onInit, scheduleRequest, startRequest;

onInit = function() {
  console.log('onInit');
  if (!(localStorage.userDm5List != null)) {
    localStorage.userDm5List = '[]';
  }
  if (!(localStorage.user8comicList != null)) {
    localStorage.user8comicList = '[]';
  }
  return startRequest({
    scheduleRequest: true
  });
};

startRequest = function(params) {
  console.log('startRequest');
  if ((params != null) && params.scheduleRequest) {
    scheduleRequest();
  }
  $.get('http://tel.dm5.com/manhua-new/', function(res) {
    var dm5Url, episodeNumber, episodeUrl, menuUrl, target, title, _i, _len, _ref, _results;
    dm5Url = 'http://tel.dm5.com';
    _ref = $(res).find('.innr3 .red_lj');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      menuUrl = dm5Url + $(target).find('a:first-child').attr('href');
      title = $(target).find('a:first-child').attr('title').trim();
      episodeUrl = dm5Url + $(target).find('a:last-child').attr('href');
      episodeNumber = $(target).find('a:last-child').text().trim();
      _results.push(checkUserSubscription({
        'site': 'dm5',
        'menuUrl': menuUrl,
        'title': title,
        'episodeUrl': episodeUrl,
        'episodeNumber': episodeNumber
      }));
    }
    return _results;
  });
  return $.get('http://www.8comic.com/comic/u-1.html', function(res) {
    var baComicUrl, menuUrl, target, _i, _len, _ref, _results;
    baComicUrl = 'http://www.8comic.com';
    _ref = $(res).find('td[height=30][nowrap] a');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      menuUrl = baComicUrl + $(target).attr('href');
      _results.push(find8comicOtherData(menuUrl));
    }
    return _results;
  });
};

find8comicOtherData = function(menuUrl) {
  return $.get(menuUrl, function(res) {
    var callback, chapter, episodeNumber, episodeUrl, params, re_callback, title;
    title = $(res).find('#Comic font')[0].firstChild.data.trim();
    chapter = $(res).find('.Vol, .Ch');
    episodeNumber = chapter[chapter.length - 1].text.trim();
    callback = $(chapter[chapter.length - 1]).attr('onclick');
    re_callback = /'(.*)',(.*)\)/;
    params = callback.match(re_callback);
    episodeUrl = cview(params[1], params[2]);
    return checkUserSubscription({
      'site': '8comic',
      'menuUrl': menuUrl,
      'title': title,
      'episodeUrl': episodeUrl,
      'episodeNumber': episodeNumber
    });
  });
};

scheduleRequest = function() {
  var delay;
  console.log('scheduleRequest');
  delay = 15;
  console.log("Scheduling for: " + delay + " min");
  return chrome.alarms.create('refresh', {
    periodInMinutes: delay
  });
};

checkUserSubscription = function(params) {
  console.log('checkUserSubscription');
  switch (params.site) {
    case 'dm5':
      console.log('check dm5');
      return localStorage.userDm5List = checkList(localStorage.userDm5List, params);
    case '8comic':
      console.log('check 8comic');
      return localStorage.user8comicList = checkList(localStorage.user8comicList, params);
    default:
      return console.log('check nothing');
  }
};

checkList = function(ls_userList, params) {
  var ele, i, isNew, isSubscriber, unreadList, userList, _i, _len;
  if (!(localStorage.unreadList != null)) {
    localStorage.unreadList = JSON.stringify([]);
  }
  if (!(ls_userList != null)) {
    ls_userList = JSON.stringify([]);
  }
  unreadList = JSON.parse(localStorage.unreadList);
  userList = JSON.parse(ls_userList);
  for (i = _i = 0, _len = userList.length; _i < _len; i = ++_i) {
    ele = userList[i];
    console.log(ele, params);
    isSubscriber = ele.menuUrl === params.menuUrl;
    isNew = ele.episodeUrl !== params.episodeUrl;
    if (isSubscriber && isNew) {
      console.log('just updated');
      unreadList.push(params);
      localStorage.unreadList = JSON.stringify(unreadList);
      userList[i] = params;
    } else if (isSubscriber) {
      console.log('already updated');
    } else {
      console.log('not matched');
    }
  }
  return JSON.stringify(userList);
};

onAlarm = function(alarm) {
  console.log('Got alarm');
  if ((alarm != null) && alarm.name === 'refresh') {
    return startRequest({
      scheduleRequest: true
    });
  }
};

cview = function(url, catid) {
  var baseurl;
  baseurl = '';
  catid = parseInt(catid);
  switch (catid) {
    case 4:
    case 6:
    case 12:
    case 22:
      baseurl = 'http://www.8comic.com/show/cool-';
      break;
    case 1:
    case 17:
    case 19:
    case 21:
      baseurl = 'http://www.8comic.com/show/cool-';
      break;
    case 2:
    case 5:
    case 7:
    case 9:
      baseurl = 'http://www.8comic.com/show/cool-';
      break;
    case 10:
    case 11:
    case 13:
    case 14:
      baseurl = 'http://www.8comic.com/show/best-manga-';
      break;
    case 3:
    case 8:
    case 15:
    case 16:
    case 18:
    case 20:
      baseurl = 'http://www.8comic.com/show/best-manga-';
  }
  url = url.replace('.html', '').replace('-', '.html?ch=');
  return baseurl + url;
};

chrome.runtime.onInstalled.addListener(onInit);

chrome.alarms.onAlarm.addListener(onAlarm);
